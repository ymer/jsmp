# devtools::install()


pander_settings <- function(){
   pander::panderOptions("digits", 2)
   panderOptions("table.split.table", Inf)
   panderOptions("table.alignment.default", "left")
}


get <- function(df, index, col, index_col=1){
   df %>% filter(!!sym(names(df)[index_col]) == index) %>% pull(col)
}

dansk <- function(num){
   format(num, big.mark = '.', decimal.mark = ',')
   }

`%notin%` <- Negate(`%in%`)

summarise <- partial(summarise, .groups = 'drop')

add_sgruppe7 <- function(df){
   df %>%
      mutate(sgruppe = case_when(
         between(antal_ansatte, 0, 4) ~ "Mikro",
         between(antal_ansatte, 5, 20) ~ "Små",
         between(antal_ansatte, 21, 50) ~ "Mellemstore -",
         between(antal_ansatte, 51, 100) ~ "Mellemstore +",
         between(antal_ansatte, 101, 500) ~ "Store",
         between(antal_ansatte, 501, 1000) ~ "Meget store",
         antal_ansatte > 1000 ~ "Største",
      ),
      sgruppe = factor(sgruppe, levels = c("Mikro", "Små", "Mellemstore -", "Mellemstore +",
                                           "Store", "Meget store", "Største"))
      )
}

add_sgruppe6 <- function(df){
   df %>%
      mutate(sgruppe = case_when(
         between(antal_ansatte, 0, 4) ~ "Mikro",
         between(antal_ansatte, 5, 20) ~ "Små",
         between(antal_ansatte, 21, 50) ~ "Mellemstore -",
         between(antal_ansatte, 51, 100) ~ "Mellemstore +",
         between(antal_ansatte, 101, 1000) ~ "Store",
         antal_ansatte > 1000 ~ "Meget store",
      ),
      sgruppe = factor(sgruppe, levels = c("Mikro", "Små", "Mellemstore -", "Mellemstore +",
                                           "Store", "Meget store"))
      )
}

add_sgruppe5 <- function(df){
   df %>%
      mutate(sgruppe = case_when(
         between(antal_ansatte, 0, 4) ~ "Mikro",
         between(antal_ansatte, 5, 20) ~ "Små",
         between(antal_ansatte, 21, 100) ~ "Mellemstore",
         between(antal_ansatte, 101, 1000) ~ "Store",
         antal_ansatte > 1000 ~ "Meget store",
      ),
      sgruppe = factor(sgruppe, levels = c("Mikro", "Små", "Mellemstore", "Store", "Meget store"))
      )
   }

add_sgruppe5nl <- function(df){
   df %>%
      mutate(sgruppe = case_when(
         between(antal_ansatte, 0, 4) ~ "Mikro\n(<= 4)",
         between(antal_ansatte, 5, 20) ~ "Små\n(5-20)",
         between(antal_ansatte, 21, 100) ~ "Mellemstore\n(21-100)",
         between(antal_ansatte, 101, 1000) ~ "Store\n(101-1000)",
         antal_ansatte > 1000 ~ "Meget store\n(1001+)",
      ),
      sgruppe = factor(sgruppe, levels = c("Mikro\n(<= 4)", "Små\n(5-20)", "Mellemstore\n(21-100)", "Store\n(101-1000)", "Meget store\n(1001+)"))
      )
}


add_sgruppe5nl2 <- function(df){
   df %>%
      mutate(sgruppe = case_when(
         between(antal_ansatte, 0, 4) ~ "Lille\n(<= 4)",
         between(antal_ansatte, 5, 20) ~ "Mindre\n(5-20)",
         between(antal_ansatte, 21, 100) ~ "Mellemstor\n(21-100)",
         between(antal_ansatte, 101, 1000) ~ "Stor\n(101-1000)",
         antal_ansatte > 1000 ~ "Meget stor\n(1001+)",
      ),
      sgruppe = factor(sgruppe, levels = c("Lille\n(<= 4)", "Mindre\n(5-20)", "Mellemstor\n(21-100)", "Stor\n(101-1000)", "Meget stor\n(1001+)"))
      )
}




add_sgruppe4 <- function(df){
   df %>%
      mutate(sgruppe = case_when(
         between(antal_ansatte, 0, 20) ~ "Små (<20)",
         between(antal_ansatte, 21, 100) ~ "Mellemstore (21-100)",
         between(antal_ansatte, 101, 1000) ~ "Store (101-1000)",
         antal_ansatte > 1000 ~ "Meget store (1001+)",
         ),
         sgruppe = factor(sgruppe, levels = c("Små (<20)", "Mellemstore (21-100)",
                                              "Store (101-1000)", "Meget store (1001+)"))
      )
   }


add_sgruppe4nl <- function(df){
   df %>%
      mutate(sgruppe = case_when(
         between(antal_ansatte, 0, 20) ~ "Små\n(<20)",
         between(antal_ansatte, 21, 100) ~ "Mellemstore\n(21-100)",
         between(antal_ansatte, 101, 1000) ~ "Store\n(101-1000)",
         antal_ansatte > 1000 ~ "Meget store\n(1001+)",
         ),
         sgruppe = factor(sgruppe, levels = c("Små\n(<20)", "Mellemstore\n(21-100)",
                                              "Store\n(101-1000)", "Meget store\n(1001+)"))
      )
   }


go_path <- function(fn){
  fn %>% gsub("%20", " ", .) %>%
    gsub("http://go.di.prod", "//go.di.prod/DavWWWRoot", .) %>%
    gsub("https://go.di.prod", "//go.di.prod/DavWWWRoot", .) %>%
    gsub("%C3%A5", "å", ., ignore.case = T) %>%
    gsub("%C3%B8", "ø", ., ignore.case = T) %>%
    gsub("%C3%98", "Ø", ., ignore.case = T) %>%
    gsub("%C3%A6", "æ", ., ignore.case = T)
}



procent <- function(num){
   scales::percent(num, decimal.mark = ",", accuracy = 0.1)
}

tab <- function(df, ...){
   count(df, ..., sort = T) %>%
      mutate(procent = procent(n / sum(n)))
}


fix_name <- function(s, truncate = 0){
   s <- stringr::str_replace_all(s, "DI", "di") %>%
      stringr::str_replace_all(
         s,
         pattern = c(
            "dinrOrgEnhed" = "di_nr",
            "Dinr" = "di_nr",
            "dinr" = "di_nr",
            "di-nummer" = "di_nr",
            "ForretningsHierarki1" = "h1",
            "ForretningsHierarki2" = "h2",
            "ForretningsHierarki3" = "h3",
            "'" = "",
            "\"" = "",
            "%" = "_percent_",
            "#" = "_number_",
            "Å" = "å",
            "Æ" = "æ",
            "Ø" = "ø",
            "\\A[\\h\\s\\p{Punctuation}\\p{Symbol}\\p{Separator}\\p{Other}]*(.*)$" = "\\1",
            "[\\h\\s\\p{Punctuation}\\p{Symbol}\\p{Separator}\\p{Other}]+" = ".")
         ) %>%
      snakecase::to_snake_case(numerals = "left")

   s <- if_else(
      str_sub(s, 1, 1) %in% as.character(0:9), paste0("n", s), s
      )

   s <- if_else(
      truncate > 0, str_sub(s, 1, truncate), s
      )

   s
   }


fix_names <- function(df, truncate = 0){
   names <- map_chr(names(df), ~fix_name(., truncate))

   while (any(duplicated(names))) {
      dupe_count <-
         vapply(
         seq_along(names), function(i) {
            sum(names[i] == names[1:i])
         },
         1L
         )

      names[dupe_count > 1] <-
         paste(
            names[dupe_count > 1],
            dupe_count[dupe_count > 1],
            sep = "_"
         )
      }

   names(df) <- names

   if ("di_nr" %in% names(df)){df  <- relocate(df, di_nr)}
   if ("hof_nr" %in% names(df)){df  <- relocate(df, hof_nr)}

   df
   }


read <- function(fn, delim = ";", truncate = 0){
   readr::read_delim(fn, delim = delim, locale = readr::locale(encoding = "latin1")) %>%
      fix_names(truncate)
}


d <- function(df){
   df %>% gt() %>%
      tab_options(
         data_row.padding = px(0),
         table.align = "left",
         table.margin.left = px(0),
         table.border.top.style = "hidden",
         table.border.bottom.style = "hidden",
         table.font.size = 12
         ) %>%
      cols_align(align = "left") %>%
      cols_width(
         gt::everything() ~ px(200),
         c(where(is.numeric)) ~ px(100))
}


left_join0 <- function(dt1, dt2, ..., fill = 0){
   merged <- left_join(dt1, dt2, ...)
   index_new_col <- (ncol(dt1) + 1):ncol(merged)
   merged[, index_new_col][is.na(merged[, index_new_col])] <- fill
   merged
}

join0 <- partial(left_join0, by = "hof_nr")
join0di<-partial(left_join0,by="di_nr")

prop_table <- function(df, a, b){
   df %>% count(!!sym(a), !!sym(b)) %>%
      pivot_wider(names_from = !!sym(b), values_from = n, values_fill = 0) %>%
      mutate(total = `TRUE` + `FALSE`) %>%
      janitor::adorn_totals() %>% data_frame() %>%
      mutate(procent = procent(`TRUE` / total)) %>%
      select(!!sym(a), !!sym(b) := `TRUE`, total, procent)
}


dpath <- function(fn){
   glue("../../../R_fællesdata/{fn}")
}


newest_data <- function(){
   Sys.glob("newest/*_overblik.rda" %>% dpath())
}


filter_dupes <- function(df, col){
   df %>% group_by(!!sym(col)) %>%
      mutate(n = n()) %>%
      filter(n > 1) %>%
      arrange(!!sym(col))
}
