---
output: html_document
editor_options: 
  chunk_output_type: inline
---
Læser data fra EDW og andre kilder, og gemmer det i en .rda fil.

Netværk, foreninger, stamdata for dagens dato, undtagen i data'et der hedder *_period.

Resterende er for perioden.



```{r}
library(di)
library(odbc)
library(tictoc)
library(readxl)

dp <- dbConnect(
  odbc(),
  Driver = "SQL Server",
  Server = "ipsql04",
  Database = "EDW",
  Trusted_Connection = "True"
)

formater <- function(df) {
   df %>%
      fix_names() %>%
      rename(hof_nr = di_nr_hof) %>%
      relocate(hof_nr)
   }

get_schema <- function(df, sdato, edato, skema) {
   df <- dbGetQuery(df, glue(
    "SET NOCOUNT ON;
        EXEC       {skema}
        @startYear = {year(sdato)},
        @startQuarter = {quarter(sdato)},
        @endYear = {year(edato)},
        @endQuarter = {quarter(edato)}"
    )) %>%
      formater()
}


get_schema_stam <- function(df, skema, cdato) {
  dbGetQuery(df, glue(
    "SET NOCOUNT ON;
            EXEC       {skema}
            @year = {year(cdato)},
            @quarter = {quarter(cdato)}"
  )) %>%
    formater() %>%
    rename(cvr_nr = cv_rnr)
}

s <- function(cmd) {
  glue("EDW.spDW_selectService{cmd}Cur")
}

ss <- function(cmd) {
  glue("EDW.spDW_select{cmd}Cur")
}

get_current <- purrr::partial(
  get_schema,
  df = dp,
  sdato = cdato,
  edato = cdato
)

get_past <- function(skema, dato_col = "dato"){
   get_schema(dp, sdato, edato, skema) %>% 
      rename(dato := dato_col) %>% 
      suppressMessages() %>% 
      filter(dato >= sdato, dato <= edato) %>% 
      mutate(måned = floor_date(dato, "month"))
}


sagstyper <- 
   tribble(
      ~sagstype, ~h2,
      "Rådgivning (GO)", "GO_Personalejuridisk rådgivning",
      "Rådgivning - Juravagten (GO)", "GO_Rådgivning af Juravagten",
      "Fagretlig forhandling (GO)", "Personalejuridiske forhandlinger",
      "Ikke-fagretlig forhandling (GO)", "Personalejuridiske forhandlinger",
      "Ledersag (GO)", "Personalejuridiske forhandlinger",
      "48 timers regelsættet (GO)", "Personalejuridiske forhandlinger",
      "Faglig Voldgift (GO)", "Retssager, voldgifter, mv.",
      "Civile retssager (GO)","Retssager, voldgifter, mv.", 
      "Arbejdsretssag (GO)","Retssager, voldgifter, mv.",
      "Nævnssag (GO)","Retssager, voldgifter, mv.",
      "Indmeldelse af virksomhed (GO)", "Øvrig personalejuridisk service",
      "Tilpasningsforhandling (GO)", "Øvrig personalejuridisk service",
      "50%-sag (GO)", "Øvrig personalejuridisk service",
      "Arbejdsnedlæggelse (GO)", "Øvrig personalejuridisk service",
      "Nyindmeldt virksomhed (GO)", "Nyinmeldt Virksomhed"
      )


```


```{r}
get_data <- function(sdato, edato){
   
# LassoX
tic("LassoX")
   
regnskab <- read_excel("data/lassox_regnskab.xlsx" %>% dpath()) %>% 
   fix_names() %>% 
   mutate(periode = case_when(
   regnskabsperiode == "2020-01-01 - 2020-12-31" ~ 2020,
   regnskabsperiode == "2019-01-01 - 2019-12-31" ~ 2019,
   regnskabsperiode == "2018-01-01 - 2018-12-31" ~ 2018,
   regnskabsperiode == "2017-01-01 - 2017-12-31" ~ 2017,
)) %>% 
   drop_na(periode) %>% 
   mutate(cvr_nr = as.numeric(cvr)) %>% 
   select(cvr_nr, periode, resultat = årets_resultat, brutto = bruttofortjeneste)

regnskab <- full_join(
   regnskab %>% distinct(cvr_nr, periode, .keep_all = T) %>% 
      pivot_wider(c(cvr_nr, resultat, periode), values_from = resultat, names_from = periode, names_prefix = "resultat_"),
   regnskab %>% distinct(cvr_nr, periode, .keep_all = T) %>% 
      pivot_wider(c(cvr_nr, brutto, periode), values_from = brutto, names_from = periode, names_prefix = "brutto_"),
   by = "cvr_nr")

personer <- read_excel("data/lassox_personer.xlsx" %>% dpath()) %>% 
   fix_names() %>% 
   filter(rolle == "Bestyrelsesformand") %>% 
   select(cvr_nr = cvr, bestyrelsesformand = navn_person)

lassox_stam <- read_excel("data/lassox_stam.xlsx" %>% dpath()) %>% 
   fix_names() %>% 
   mutate(ceo_tiltrædelsesdato = date(ymd_hms(kontaktperson_tiltrædelsesdato))) %>% 
   select(cvr_nr = cvr, ceo = kontaktperson, ceo_rolle = kontaktperson_rolle, 
          ceo_tiltrædelsesdato, formål) %>% 
   mutate(cvr_nr = as.numeric(cvr_nr)) %>% distinct(cvr_nr,.keep_all=TRUE)

toc()

#EDW

tic("Indlæs personer")

l1 <- c('OrgEnhedId', 'DInrOrgEnhed', 'PersonId', 'DInrPer', 'Virksomhedsrolle', 'Titel', 'Telefon1', 'Mobil1', 'Email', 'ErPostTilladt', 'RolleFra', 'RolleTil')

l2 <- c('PersonId', 'Password', 'Uddannelse', 'Ejer', 'Timestamp', 'Opdateringstype', 'DatoFoerstePopulering', 'AarsagGrupperingId', 'MembercareOprettetAf', 'MembercareOprettetDato', 'Telefon1', 'Telefon2', 'Mobil1', 'Mobil2', 'Fax1', 'Fax2', 'Email')

person_org <- dbGetQuery(dp, "SELECT * FROM EDW.EDWOrgEnhedPerson") %>% 
   select( all_of(l1) ) %>% fix_names()

person_ind <- dbGetQuery(dp, "SELECT * FROM EDW.EDWPerson") %>% 
   select( -c( all_of(l2))) %>% fix_names()

person_period <- person_ind %>% left_join(person_org, by="di_nr_per") %>% 
   relocate('di_nr', .before = "di_nr_per") %>%
   filter(
      rolle_fra <= edato,
      rolle_til >= sdato
      )

person <- person_period %>% filter( rolle_til == ymd(99991231))

toc()

tic("Stamdata")

stam_alle <- get_schema_stam(dp, ss("StamdataPaaVirksomheder"), cdato) %>% 
   mutate(
      cvr_nr = as.numeric(cvr_nr),
      ny_direktoer_start_dato = ymd(ny_direktoer_start_dato))

ikke_medlemmer <- stam_alle %>% filter(!medlemdi)

toc()

tic("Foreninger")

foreninger_alle <- get_current(ss("Foreningsmedlemskaber")) %>%
   filter(!(ymd(medlems_type_slut) < cdato)) %>% 
   filter(!(hof_nr == 828767 & medlem_type == "DI HOVED")) %>% 
   filter(!(hof_nr == 1064163 & medlem_type == "DI TREKANT"))

foreninger <- foreninger_alle %>% drop_na(hof_nr)

foreninger_period <- get_schema(dp, sdato, edato, ss("Foreningsmedlemskaber")) %>%
   mutate(medlems_type_start = ymd(medlems_type_start), medlems_type_slut = ymd(medlems_type_slut)) %>%
   filter(
      medlems_type_start <= edato,
      medlems_type_slut >= sdato
      )

toc()

tic("GO")

go <- get_past(s("LeveretGOSag"), "sag_oprettet") %>%
   filter(kontakttype == "VRK") %>%
   select(-h2) %>%
   mutate(
      sagstype = ifelse(sagstype == "Fagretlig sag (GO)", "Fagretlig forhandling (GO)", sagstype),
      sagstype = ifelse(sagstype == "Tilpasningsforhandlinger (GO)", "Tilpasningsforhandling (GO)", sagstype)) %>% 
   left_join(sagstyper, by = "sagstype") %>% 
   mutate(sagstype = str_sub(sagstype, 0, -6))

toc()

tic("SO")

so_alle <- get_past(s("LeveretSuperOffice"), "s_start_dato") %>%
   select(hof_nr, di_nr, dato, h1, h2, h3, måned, område) %>%
   mutate(
      h2 = case_when(
         område %in% c("DI Turisme og oplevelsesøkonomi", "DI Dansk Byggeri") ~ "Brancheforhold",
         område %in% c("Erhvervsjura og rapportering", "Erhvervsjuridisk Rådgivning Dansk Byggeri") ~ "Erhvervspolitisk rådgivning",
         område == "Arbejdsmiljø og Teksam" ~ "Arbejdsmiljø og Teksam",
         område == "BSC Bilbranchen" ~ "Rådgivning Bilbranchen",
         h2 == "Ledelseudvikling og produktivitet" ~ "Ledelse og virksomhedsudvikling",
         h2 == "Brug af lønstatistik og rådgivning om løn" ~ "Lønstatistik og rådgivning om løn",
         h2 == "Øvrige Services" ~ "Øvrige services",
         T ~ h2))

so <- so_alle %>% drop_na(hof_nr)

toc()

tic("Arrangementer")
  
arrangementer_alle <- get_past(s("LeveretArrangement"), "s_start") %>%
   relocate(hof_nr, di_nr, dato)

arrangementer <- arrangementer_alle %>% drop_na(hof_nr)

toc()

tic("Certifikater")

certifikater <- get_past(s("LeveretAXCert"), "fakturadato")

toc()

tic("Netværk")

netværk_alle <- get_current(s("BestiltNetvaerk")) %>%
   filter(!(ymd(slut_dato) < cdato))

netværk <- netværk_alle %>% drop_na(hof_nr)

netværk_period <- get_schema(dp, sdato, edato, s("BestiltNetvaerk")) %>%
   mutate(start_dato = ymd(start_dato), slut_dato = ymd(slut_dato)) %>%
   filter(
      start_dato <= edato,
      slut_dato >= sdato
      )

toc()

tic("Nyhedsbreve")

nyhedsbreve_alle <- get_current(s("BestiltNyhedsbreve")) %>%
   filter(!(ymd(slut_dato) < cdato))

nyhedsbreve <- nyhedsbreve_alle %>% drop_na(hof_nr)

nyhedsbreve_period <- get_schema(dp, sdato, edato, s("BestiltNyhedsbreve")) %>%
   mutate(start_dato = ymd(start_dato), slut_dato = ymd(slut_dato)) %>%
   filter(
      start_dato <= edato,
      slut_dato >= sdato
      )

toc()

tic("didk")

didk_alle <- get_past(s("LeveretDIdkBeskyttedeSider"), "open")

didk <- didk_alle %>% drop_na(hof_nr)

toc()


# Andet data

tic("Andet data")

mtu <- read_rds("data/mtu.rds" %>% dpath())

ansvarlige <- read.csv("data/Relationsansvarlige.csv" %>% dpath(), sep=";") %>%
   fix_names() %>%
   select(di_nr , relationsansvarlig) %>% 
   mutate(di_nr = as.numeric(di_nr))

kontingent <- get_schema(dp, sdato, edato, ss("Kontingent")) %>% 
   mutate(kontingent_gruppe = ifelse(netvaerk_type == "ORG", "di", "andet")) %>%
   group_by(hof_nr, kontingent_gruppe) %>%
   summarise(kontingent = sum(beloeb)) %>%
   pivot_wider(
      values_from = kontingent, names_from = kontingent_gruppe,
      names_prefix = "kontingent_", values_fill = 0
      ) %>%
   mutate(kontingent = kontingent_andet + kontingent_di)

kontingent_netværk <- get_schema(dp, sdato, edato, ss("Kontingent"))

brancher <- read_excel("data/Allan_brancher.xlsx" %>% dpath()) %>%
   fix_names() %>% 
   rename(branchenavn_ny = ny_brancheinddeling,
          branchenavn_dst = branche_dst,
          branchekode_to_cifret = to_cifret_branchekode)

admdir <- read_excel("data/admdir.xlsx" %>% dpath()) %>% 
   mutate(di_nr=as.numeric(di_nr))

toc()

# Data behandling og samling

tic("Data behandling")

dibyg <- foreninger %>%
   filter(netvaerk_navn == "DI Dansk Byggeri") %>%
   distinct(hof_nr)

stam_afd <- stam_alle %>% filter(medlemdi) %>%
   distinct(di_nr, .keep_all = TRUE) %>%
   left_join(stam_alle %>% distinct(di_nr, .keep_all = TRUE) %>% filter(medlem_status=="HOF") %>% mutate(
          rank_lønsum = rank(desc(tlon), ties.method = "first"))%>% select(di_nr,rank_lønsum),by="di_nr") %>%
   rename(virksomhed = org_enhed_navn,
          branchekode = branche_kode,
          branchenavn = branche_kode_navn,
          branchekode_di = di_branche_kode,
          branchenavn_di = di_branche_kode_navn) %>%
   mutate(branchekode_to_cifret = str_sub(branchekode, 1, 2),
          branchekode_fire_cifret = str_sub(branchekode, 1, 4)) %>%
   left_join(brancher, by = "branchekode_to_cifret") %>%
   unite("branchekode_branchenavn", c(branchekode_to_cifret, branchenavn_dst), sep = " ", remove=FALSE) %>%
   relocate(c(branchekode_fire_cifret, branchekode_to_cifret), .after = branchekode) %>%
   relocate(c(branchenavn_ny, branchenavn_dst, branchekode_branchenavn), .after = branchenavn_di) %>%
   left_join(regnskab, by = "cvr_nr") %>%
   left_join(personer, by = "cvr_nr")  %>% 
   left_join(lassox_stam, by = "cvr_nr") %>%
   mutate(
      ceo = ifelse(is.na(ny_direktoer_start_dato), ceo, person_navn),
      ceo_tiltrædelsesdato = coalesce(ny_direktoer_start_dato, ceo_tiltrædelsesdato)) %>% 
   left_join(ansvarlige,by="di_nr") %>%
   left_join(person %>% filter(virksomhedsrolle=="Adm. direktør/Ejer") %>% select(di_nr,person_navn,email),by=c("ceo"="person_navn","di_nr"="di_nr"),copy=FALSE) %>% relocate(email, .after = ceo) %>%
   join0(
      foreninger %>% filter(
      netvaerk_type == "REF", medlem_status == "HOF",
      medlems_type_slut == "9999-12-31"
      ) %>%
         select(hof_nr, regionalforening = netvaerk_navn)
      ) %>%
  join0(
     foreninger %>% filter(netvaerk_type %in% c("MEDF", "BRFF")) %>%
        group_by(hof_nr) %>%
        summarise("antall_medlemskaber" := n())) %>%
   add_sgruppe5nl2() %>%
   mutate(post_nor = as.integer(post_nr)) %>% suppressWarnings() %>% 
   mutate(
      kun_idi = ifelse(antall_medlemskaber>0,"Nej","Ja"),
      di_optagelse = ymd(di_optagelse),
      org_enhed_navn = str_replace_all(virksomhed, pattern = '"', replacement = ""),
      dansk_byggeri = hof_nr %in% dibyg$hof_nr,
      relansvarlig = ifelse(relationsansvarlig != 0, "Ja", "Nej"),
      relationsansvarlig = ifelse(relationsansvarlig == 0, "Ingen relationsansvarlig", relationsansvarlig),
      dansk_byggeri = hof_nr %in% dibyg$hof_nr,
      dansk_byggeri = ifelse(dansk_byggeri == TRUE, "Dansk Byggeri", "Ikke Dansk Byggeri"),
      ref = ifelse(is.na(ref), "ikke REF", "REF"),
      brff = ifelse(is.na(brff), "ikke BF", "BF"),
      bsc = ifelse(is.na(bsc), "ikke BSC", "BSC"),
      smv = ifelse(is.na(smv), "ikke SMV", "SMV"),
      mmi = ifelse(is.na(mmi), "ikke MMI", "MMI"),
      region_navn = case_when(
         region_navn == "" ~ "Ingen",
         is.na(region_navn) ~ "Ingen",
         T ~ region_navn),
      regionalforening = case_when(
         regionalforening == 0 ~ "Ingen",
         T ~ regionalforening),
      land_navn = ifelse(is.na(land_navn), "Ikke givet", land_navn)) %>%
   join0(kontingent) %>% 
   mutate(across(c(kontingent_andet, kontingent_di, kontingent), ~ifelse(medlem_status == "HOF", ., 0))) %>% 
   mutate(kontingent_andel = kontingent / sum(kontingent)) %>%
   rename(di_direkte = kun_idi)  %>%
   distinct(di_nr, .keep_all = TRUE)


stam <- stam_afd %>% filter(medlem_status == "HOF")

mylist<-list(
   "stam" = stam, 
   "stam_afd" = stam_afd, 
   "ikke_medlemmer" = ikke_medlemmer, 
   "foreninger" = foreninger, 
   "go" = go, 
   "so" = so, 
   "nyhedsbreve" = nyhedsbreve, 
   "arrangementer" = arrangementer, 
   "certifikater" = certifikater, 
   "netværk" = netværk, 
   "netværk_period" = netværk_period, 
   "foreninger_period" = foreninger_period, 
   "didk" = didk, 
   "mtu" = mtu, 
   "kontingent" = kontingent, 
   "nyhedsbreve_period" = nyhedsbreve_period,
   "person" = person,
   "person_period"= person_period,
   "kontingent_netværk"=kontingent_netværk)

toc()

return(mylist)

}


edw_period <- function(sdato, edato){
   mylist <- get_data(sdato, edato)
   list2env(mylist, .GlobalEnv)
   save(stam, stam_afd, ikke_medlemmer, foreninger, go, so, nyhedsbreve, arrangementer, 
        certifikater, netværk, 
        netværk_period, foreninger_period, didk, mtu, nyhedsbreve_period, person, person_period, 
        kontingent,kontingent_netværk,
        file = glue("periodexports/edw_{sdato}_{edato}.rda") %>% dpath())
   }

edw_daily <- function(sdato, edato){
   mylist <- get_data(sdato, edato)
   list2env(mylist, .GlobalEnv)
   filename <- glue("{str_sub(today(),6,7)}{str_sub(today(),9,10)}")
   save(stam, stam_afd, foreninger, go, so, nyhedsbreve, arrangementer, certifikater, netværk, didk, 
        person, person_period, kontingent,
        file = glue("dailyexports/edw_{filename}.rda") %>% dpath())
     }
```



```{r}
sdato <- ymd("2019-10-01")
edato <- ymd("2020-09-30")

cdato <- today()
tic("Total")
edw_period(sdato, edato)
toc()

#edw_daily(sdato, edato)

```

```{r}
ds <- kontingent %>% 
   filter(netvaerk_navn == "DI") %>% 
   filter(beloeb > 0) %>% 
   count(hof_nr) %>% 
   arrange(desc(n)) %>% 
   filter(n > 4)
```


```{r}
stam %>% filter(hof_nr == 967886 ) %>% 
   select(hof_nr, kontingent)
```
```{r}
kontingent %>% filter(hof_nr == 1143114, netvaerk_navn == "DI")
```


```{r}



kontingent %>% 
   filter(netvaerk_navn == "DI") %>% 
   filter(hof_nr %in% ds$hof_nr) %>% 
   arrange(hof_nr) %>% 
   select(hof_nr, di_nr, virksomhed, aar, kvartal, beloeb)
```

